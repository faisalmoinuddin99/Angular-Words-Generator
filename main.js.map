{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts","./src/utils/country.ts","./src/utils/words.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport arrayWords from '../utils/words';\nimport countryArray from '../utils/country';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'word-genrator';\n\n  words = '';\n\n  limit = 5;\n\n  handleSliderChange(newLimit: number) {\n    this.limit = newLimit;\n  }\n  genrate() {\n    this.words = arrayWords.slice(0, this.limit).join(' ');\n  }\n\n  // Assiagnment\n  countries = '';\n  randomNumber;\n  genrateRandomName() {\n    this.randomNumber = Math.floor(Math.random() * 20 + 1);\n    this.countries = countryArray.slice(1, this.randomNumber).join(' ');\n  }\n}\n","<div class=\"container w-50 mt-5 text-center\">\n  <div class=\"text-center display-3 m-3 text-white\">\n    Word Limit: {{ limit }}\n  </div>\n\n  <input\n    type=\"range\"\n    min=\"1\"\n    max=\"50\"\n    value=\"{{ limit }}\"\n    class=\"slider form-control-range\"\n    (change)=\"handleSliderChange($event.target.value)\"\n  />\n  <button (click)=\"genrate()\" class=\"btn btn-info\">Genrates Words</button>\n\n  <div *ngIf=\"words\" class=\"card card-body\">\n    <p class=\"display-4\">\n      {{ words }}\n    </p>\n  </div>\n  <br />\n\n  <button (click)=\"genrateRandomName()\" class=\"btn btn-warning\">\n    Genrate Randome List of Country\n  </button>\n  <div *ngIf=\"countries\" class=\"card card-body\">\n    <p class=\"display-4\">\n      {{ countries }}\n    </p>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","export default [\r\n  'India',\r\n  'USA',\r\n  'Australia',\r\n  'Pakistan',\r\n  'China',\r\n  'England',\r\n  'Spain',\r\n  'Italy',\r\n  'Argentina',\r\n  'Brazil',\r\n  'Canada',\r\n  'New Zealand',\r\n  'Nepal',\r\n  'Russia',\r\n  'Iran',\r\n  'Japan',\r\n  'South Korea',\r\n  'North Korea',\r\n  'SriLanka',\r\n  'Trukey',\r\n];\r\n","// some random words\nexport default [\n  'busy',\n  'composition',\n  'saddle',\n  'track',\n  'close',\n  'aside',\n  'public',\n  'break',\n  'taken',\n  'bush',\n  'shelf',\n  'public',\n  'string',\n  'sick',\n  'member',\n  'wolf',\n  'giant',\n  'government',\n  'sometime',\n  'evidence',\n  'plates',\n  'though',\n  'winter',\n  'spell',\n  'sure',\n  'zipper',\n  'won',\n  'poem',\n  'blank',\n  'rubbed',\n  'elephant',\n  'fact',\n  'wherever',\n  'store',\n  'disease',\n  'loose',\n  'die',\n  'count',\n  'tree',\n  'hung',\n  'around',\n  'alike',\n  'tide',\n  'tell',\n  'motor',\n  'am',\n  'pass',\n  'thus',\n  'grow',\n  'imagine',\n];\n"],"sourceRoot":"webpack:///"}